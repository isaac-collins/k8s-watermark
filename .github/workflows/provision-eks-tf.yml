name: Build Infra and Provision
on:
  push:
    branches:
      - test 
jobs:
  tf:
    name: Provision EKS Cluster
    runs-on: ubuntu-latest
    needs: tf
    defaults:
      run:
        working-directory: "tf/aws"
        
    steps:
    
    - uses: actions/checkout@v2
    
    - uses: hashicorp/setup-terraform@v1
    
    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true
    
    - name: Terraform Init
      id: init
      run: terraform init
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
    
    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: true
      
    - name: Terraform Apply
      id: apply
      run: terraform apply -auto-approve
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        
    - name: Get KubeConfig Data
      id: kubeconfig
      run: echo ::set-output name=data::$(terraform output -raw kubectl_config)
      
    - name: Update KubeConfig Secret
      id: kubeconfig_secret
      uses: hmanzur/actions-set-secret@v2.0.0
      with:
        name: KUBECONFIG
        value: ${{steps.kubeconfig.outputs.data}} 
        repository: isaac-collins/k8s-watermark
        token: ${{ secrets.REPO_ACCESS_TOKEN }}
        
  kubernetes:
    name: Apply Manifests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "manifest"
        
    steps: 
    - uses: actions/checkout@v2

    - name: Sanity
      id: kubeconfig
      run: echo ${{secrets.KUBECONFIG}}

    - name: Apply Manifests
      uses: actions-hub/kubectl@master
      env:
        KUBE_CONFIG: ${{secrets.KUBECONFIG}}    
      with:
        args: apply -f .

    - name: Get Deployments
      uses: actions-hub/kubectl@master
      env:
        KUBE_CONFIG: ${{secrets.KUBECONFIG}}    
      with:
        args: get deployments




