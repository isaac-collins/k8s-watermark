name: "TEST: Test, Build, Deploy TEST Branch"
on: 
  push:
    branches:
      - test

jobs:
  lint:
    name: Run Python Linter
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - uses: ricardochaves/python-lint@test
      
  build:
    name: "Build TEST Containers"
    runs-on: ubuntu-latest
    needs: lint

    steps:
    - uses: actions/checkout@v2
    
    - name: Login to Dockerhub
      run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

    - name: Build frontend
      run: cd frontend && docker build  . --file dockerfile --tag isaaccollins/isaac-watermark:frontend_test
      
    - name: Build backend
      run: cd backend && docker build  . --file dockerfile --tag isaaccollins/isaac-watermark:backend_test

    - name: Build db-api
      run: cd db-api && docker build  . --file dockerfile --tag isaaccollins/isaac-watermark:db-api_test

    - name: Push frontend
      run: docker push isaaccollins/isaac-watermark:frontend_test
      
    - name: Push backend
      run: docker push isaaccollins/isaac-watermark:backend_test

    - name: Push db-api
      run: docker push isaaccollins/isaac-watermark:db-api_test

  deploy:
    name: Apply Manifests EKS
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: "manifest"
        
    steps: 
    - uses: actions/checkout@v2

    - name: Config AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        aws-region: us-west-2

    - name: Update KubeConfig
      run: aws eks --region us-west-2 update-kubeconfig --name k8s-watermark

    - name: Create DEV Namespace
      run: kubectl create -f https://k8s.io/examples/admin/namespace-prod.json && kubectl config set-context --current --namespace=development

    - name: Add Container Test Identifier
      run: sed -i 's/$BUILD_NUMBER/_test/' *

    - name: Apply Manifests
      run: kubectl apply -f .
      
    - name: Return ELB Endpoint
      run: bash -c 'external_ip=""; while [ -z $external_ip ]; do echo "Waiting for end point..."; external_ip=$(kubectl get svc ingress-watermark --template="{{range .status.loadBalancer.ingress}}{{.hostname}}{{end}}"); [ -z "$external_ip" ] && sleep 10; done; echo "Ingress IP ready - " && echo $external_ip; export endpoint=$external_ip'

